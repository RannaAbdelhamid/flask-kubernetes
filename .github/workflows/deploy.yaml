name: Build and Deploy Flask App

on:
  workflow_dispatch:  
  push:
    branches:
      - main

env:
  ACR_NAME: ${{ vars.ACR_NAME }}    
  IMAGE_NAME: rana-flaskapp  
  IMAGE_TAG: rana
  RELEASE_NAME: rana-flask

jobs:
  build-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          echo "Building Docker image: $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG"
          docker build -t $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG .

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.ACR_NAME }}
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: |
          echo "Pushing image to: $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG"
          docker push $ACR_NAME/$IMAGE_NAME:$IMAGE_TAG

      - name: Create kubeconfig
        run: |
          mkdir -p ~/.kube
          cat <<EOF > ~/.kube/config
          apiVersion: v1
          kind: Config
          clusters:
          - cluster:
              server: ${{ vars.KUBE_SERVER }}
              insecure-skip-tls-verify: true
            name: rana-cluster
          contexts:
          - context:
              cluster: rana-cluster
              user: rana-user
            name: rana-context
          current-context: rana-context
          users:
          - name: rana-user
            user:
              username: ${{ vars.KUBE_USERNAME }}
              password: ${{ secrets.KUBE_PASSWORD }}
          EOF
        env:
          KUBE_SERVER: ${{ vars.KUBE_SERVER }}
          KUBE_USERNAME: ${{ vars.KUBE_USERNAME }}
          KUBE_PASSWORD: ${{ secrets.KUBE_PASSWORD }}

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      - name: Deploy Helm chart
        run: |
          helm upgrade --install $RELEASE_NAME ./helm \
            --set image.repository=$ACR_NAME/$IMAGE_NAME \
            --set image.tag=$IMAGE_TAG \
            --set replicaCount=2
